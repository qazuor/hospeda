import { FeatureService } from '@repo/service-core';
import requiredManifest from '../manifest-required.json';
import { createSeedFactory } from '../utils/index.js';

/**
 * Seed factory for features
 *
 * Creates feature records from JSON files, excluding the slug field
 * since it's auto-generated by the service lifecycle hooks.
 */
export const seedFeatures = createSeedFactory({
    entityName: 'Features',
    serviceClass: FeatureService,
    folder: 'src/data/feature',
    files: requiredManifest.features,

    // Exclude metadata fields, slug field, and lifecycleState as they're auto-generated
    normalizer: (data) => {
        // First exclude metadata fields and auto-generated fields
        const { $schema, id, slug, lifecycleState, ...cleanData } = data as {
            $schema?: string;
            id?: string;
            slug?: string;
            lifecycleState?: string;
            [key: string]: unknown;
        };

        return cleanData;
    },

    // Custom entity info for better logging
    getEntityInfo: (item, _context) => {
        const feature = item as { name: string; type?: string };
        const typeInfo = feature.type ? ` (${feature.type})` : '';
        return `"${feature.name}"${typeInfo}`;
    }
});
