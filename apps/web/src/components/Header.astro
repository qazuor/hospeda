---
import { getLangFromUrl, useTranslations } from '@/utils/i18n';
import LanguageSelector from '@/components/LanguageSelector.astro';
import ThemeToggle from '@/components/ThemeToggle.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<header class='sticky top-0 z-50 w-full bg-white/90 dark:bg-gray-900/90 backdrop-blur-md shadow-sm'>
    <div class='container mx-auto px-4 flex items-center justify-between h-16'>
        <a href='/' class='flex items-center space-x-2' aria-label='Hosped.ar - Página de inicio'>
            <div class='text-primary-500 font-display text-2xl font-bold'>Hosped.ar</div>
        </a>

        <div class='hidden md:flex items-center space-x-6'>
            <nav>
                <ul class='flex space-x-6'>
                    <li>
                        <a
                            href='/'
                            class='text-gray-700 dark:text-gray-300 hover:text-primary-500 dark:hover:text-primary-400 font-medium'
                            >{t('nav.home')}</a
                        >
                    </li>
                    <li>
                        <a
                            href='/alojamientos'
                            class='text-gray-700 dark:text-gray-300 hover:text-primary-500 dark:hover:text-primary-400 font-medium'
                            >{t('nav.accommodations')}</a
                        >
                    </li>
                    <li>
                        <a
                            href='/destinos'
                            class='text-gray-700 dark:text-gray-300 hover:text-primary-500 dark:hover:text-primary-400 font-medium'
                            >{t('nav.destinations')}</a
                        >
                    </li>
                    <li>
                        <a
                            href='/blog'
                            class='text-gray-700 dark:text-gray-300 hover:text-primary-500 dark:hover:text-primary-400 font-medium'
                            >{t('nav.blog')}</a
                        >
                    </li>
                </ul>
            </nav>
        </div>

        <div class='flex items-center space-x-4'>
            <LanguageSelector />
            <ThemeToggle />
            <button
                type='button'
                id='mobile-menu-button'
                class='md:hidden p-2 rounded-md text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none'
                aria-label='Abrir menú'
            >
                <svg
                    xmlns='http://www.w3.org/2000/svg'
                    fill='none'
                    viewBox='0 0 24 24'
                    stroke='currentColor'
                    class='w-6 h-6'
                >
                    <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 12h16M4 18h16'
                    ></path>
                </svg>
            </button>
        </div>
    </div>

    <!-- Mobile menu, hidden by default -->
    <div id='mobile-menu' class='md:hidden hidden bg-white dark:bg-gray-900 shadow-md'>
        <div class='container mx-auto px-4 py-3'>
            <nav>
                <ul class='space-y-3'>
                    <li>
                        <a
                            href='/'
                            class='block text-gray-700 dark:text-gray-300 hover:text-primary-500 dark:hover:text-primary-400 font-medium py-2'
                            >{t('nav.home')}</a
                        >
                    </li>
                    <li>
                        <a
                            href='/alojamientos'
                            class='block text-gray-700 dark:text-gray-300 hover:text-primary-500 dark:hover:text-primary-400 font-medium py-2'
                            >{t('nav.accommodations')}</a
                        >
                    </li>
                    <li>
                        <a
                            href='/destinos'
                            class='block text-gray-700 dark:text-gray-300 hover:text-primary-500 dark:hover:text-primary-400 font-medium py-2'
                            >{t('nav.destinations')}</a
                        >
                    </li>
                    <li>
                        <a
                            href='/blog'
                            class='block text-gray-700 dark:text-gray-300 hover:text-primary-500 dark:hover:text-primary-400 font-medium py-2'
                            >{t('nav.blog')}</a
                        >
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</header>

<script>
    // Toggle mobile menu
    const menuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');

    if (menuButton && mobileMenu) {
        menuButton.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');

            // Update aria-expanded attribute
            const isExpanded = !mobileMenu.classList.contains('hidden');
            menuButton.setAttribute('aria-expanded', String(isExpanded));

            // Change icon based on state
            const icon = menuButton.querySelector('svg');
            if (icon) {
                if (isExpanded) {
                    icon.innerHTML =
                        '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>';
                    menuButton.setAttribute('aria-label', 'Cerrar menú');
                } else {
                    icon.innerHTML =
                        '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>';
                    menuButton.setAttribute('aria-label', 'Abrir menú');
                }
            }
        });

        // Close menu when clicking outside
        document.addEventListener('click', (event) => {
            if (
                !menuButton.contains(event.target as Node) &&
                !mobileMenu.contains(event.target as Node) &&
                !mobileMenu.classList.contains('hidden')
            ) {
                mobileMenu.classList.add('hidden');
                menuButton.setAttribute('aria-expanded', 'false');

                const icon = menuButton.querySelector('svg');
                if (icon) {
                    icon.innerHTML =
                        '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>';
                    menuButton.setAttribute('aria-label', 'Abrir menú');
                }
            }
        });
    }
</script>
