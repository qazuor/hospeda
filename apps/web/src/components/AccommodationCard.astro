---
import { formatPrice } from '@/utils/formatters';
import { AccommodationType } from '@repo/types';

interface Props {
    accommodation: AccommodationType;
}

const { accommodation } = Astro.props;

// console.log('accommodation ->', accommodation);
console.log('accommodation.features ->', accommodation.reviews);
---

<div
    class='bg-white dark:bg-gray-800 rounded-xl overflow-hidden shadow-lg border border-gray-100 dark:border-gray-700 transition duration-300 hover:shadow-xl transform hover:-translate-y-1'
>
    <a href={`/alojamientos/${accommodation.id}`} class='block aspect-w-16 aspect-h-9 relative overflow-hidden'>
        <img
            src={accommodation.media?.featuredImage?.url ||
                accommodation.media?.gallery?.[0]?.url ||
                'https://images.pexels.com/photos/259588/pexels-photo-259588.jpeg'}
            alt={accommodation.displayName}
            class='h-72 object-cover transition duration-300 hover:scale-105 w-full'
        />
    </a>

    <div class='p-8'>
        <a href={`/alojamientos/${accommodation.id}`} class='block'>
            <div class='flex items-start justify-between mb-2'>
                <h3 class='font-bold hover:text-primary-500 line-clamp-2 text-2xl transition'>
                    {accommodation.displayName}
                </h3>
            </div>

            <p class='dark:text-gray-400 mb-4 text-gray-600 text-base'>
                {accommodation.location?.city || ''}, {accommodation.location?.state || ''}
            </p>

            <div class='flex flex-wrap gap-3 mb-6'>
                {
                    accommodation.features &&
                        accommodation.features
                            .slice(0, 3)
                            .map((featureRelation) => (
                                <span class='bg-gray-100 dark:bg-gray-700 dark:text-gray-200 px-4 py-2 rounded-full text-gray-800 text-sm font-medium'>
                                    {featureRelation.feature?.displayName || featureRelation.hostReWriteName || ''}
                                </span>
                            ))
                }
            </div>

            <div class='flex items-center justify-between'>
                <div class='flex items-center'>
                    <div class='flex items-center text-accent-500'>
                        <svg xmlns='http://www.w3.org/2000/svg' class='h-6 w-6' viewBox='0 0 20 20' fill='currentColor'>
                            <title>Rating star</title>
                            <path
                                d='M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z'
                            ></path>
                        </svg>
                        <span class='font-medium ml-2 text-lg'
                            >{accommodation.rating?.cleanliness?.toFixed(1) || '4.5'}</span
                        >
                        <span class='dark:text-gray-400 ml-1 text-gray-600 text-base'>
                            ({accommodation._count?.reviews || accommodation.reviews?.length || 0})
                        </span>
                    </div>
                </div>
                <div>
                    <p class='dark:text-white font-bold text-gray-900 text-xl'>
                        {formatPrice(accommodation.price?.price || 0)}
                    </p>
                    <p class='dark:text-gray-400 text-gray-600 text-right text-xs'>por noche</p>
                </div>
            </div>
        </a>
    </div>
</div>
