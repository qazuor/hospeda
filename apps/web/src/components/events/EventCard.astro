---
import { getEventUrl } from '@/utils';

const { event } = Astro.props;
const eventUrl = getEventUrl(event) || '';

// Format event dates
const formatEventDate = (dateObj: any) => {
    if (!dateObj) return '';

    const startDate = new Date(dateObj.start);
    const endDate = dateObj.end ? new Date(dateObj.end) : null;

    const options: Intl.DateTimeFormatOptions = {
        day: 'numeric',
        month: 'short',
        year: 'numeric',
    };

    if (endDate && startDate.toDateString() !== endDate.toDateString()) {
        return `${startDate.toLocaleDateString('es-ES', options)} - ${endDate.toLocaleDateString('es-ES', options)}`;
    }

    return startDate.toLocaleDateString('es-ES', options);
};

const formattedDate = formatEventDate(event.date);

// Get event status
const getEventStatus = (dateObj: any) => {
    if (!dateObj) return 'upcoming';

    const now = new Date();
    const startDate = new Date(dateObj.start);
    const endDate = dateObj.end ? new Date(dateObj.end) : startDate;

    if (now < startDate) return 'upcoming';
    if (now >= startDate && now <= endDate) return 'ongoing';
    return 'past';
};

const eventStatus = getEventStatus(event.date);
---

<article
    class='group bg-white dark:bg-gray-800 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-500 overflow-hidden border border-gray-100 dark:border-gray-700 transform hover:-translate-y-2'
>
    <a
        href={eventUrl}
        class='block focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-500 focus-visible:ring-offset-2 rounded-3xl'
        aria-label={`Ver evento: ${event.name}`}
    >
        <!-- Image Section -->
        <div class='relative h-56 overflow-hidden'>
            <img
                src={event.media?.featuredImage?.url || '/placeholder-event.svg'}
                alt={event.name}
                class='w-full h-full object-cover group-hover:scale-110 transition-transform duration-700 ease-out'
                loading='lazy'
            />

            <!-- Gradient Overlay -->
            <div
                class='absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent group-hover:from-black/70 transition-all duration-500'
            >
            </div>

            <!-- Status Badge -->
            <div class='absolute top-4 left-4'>
                <div
                    class={`px-3 py-1.5 rounded-full text-xs font-semibold shadow-lg backdrop-blur-sm ${
                        eventStatus === 'ongoing'
                            ? 'bg-green-500/90 text-white'
                            : eventStatus === 'upcoming'
                              ? 'bg-primary-500/90 text-white'
                              : 'bg-gray-500/90 text-white'
                    }`}
                >
                    {
                        eventStatus === 'ongoing'
                            ? 'En curso'
                            : eventStatus === 'upcoming'
                              ? 'Próximamente'
                              : 'Finalizado'
                    }
                </div>
            </div>

            <!-- Category Badge -->
            {
                event.category && (
                    <div class='absolute top-4 right-4'>
                        <div class='bg-white/95 dark:bg-gray-900/95 backdrop-blur-sm text-gray-900 dark:text-white px-3 py-1.5 rounded-full text-xs font-medium shadow-lg'>
                            {event.category}
                        </div>
                    </div>
                )
            }

            <!-- Date Overlay -->
            <div class='absolute bottom-4 left-4 right-4'>
                <div class='bg-white/95 dark:bg-gray-900/95 backdrop-blur-sm rounded-2xl p-4 shadow-lg'>
                    <div class='flex items-center justify-between'>
                        <div class='flex items-center text-gray-900 dark:text-white'>
                            <div
                                class='w-12 h-12 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-xl flex items-center justify-center mr-3'
                            >
                                <svg class='w-6 h-6 text-white' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                                    <path
                                        stroke-linecap='round'
                                        stroke-linejoin='round'
                                        stroke-width='2'
                                        d='M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z'
                                    ></path>
                                </svg>
                            </div>
                            <div>
                                <div class='font-semibold text-sm'>
                                    {formattedDate}
                                </div>
                                {
                                    event.date?.start && (
                                        <div class='text-xs text-gray-600 dark:text-gray-400'>
                                            {new Date(event.date.start).toLocaleTimeString('es-ES', {
                                                hour: '2-digit',
                                                minute: '2-digit',
                                            })}
                                        </div>
                                    )
                                }
                            </div>
                        </div>

                        <!-- Location Icon -->
                        {
                            event.destination?.name && (
                                <div class='flex items-center text-gray-600 dark:text-gray-400 text-xs'>
                                    <svg class='w-4 h-4 mr-1' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                                        <path
                                            stroke-linecap='round'
                                            stroke-linejoin='round'
                                            stroke-width='2'
                                            d='M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z'
                                        />
                                        <path
                                            stroke-linecap='round'
                                            stroke-linejoin='round'
                                            stroke-width='2'
                                            d='M15 11a3 3 0 11-6 0 3 3 0 016 0z'
                                        />
                                    </svg>
                                    <span class='truncate max-w-20'>{event.destination.name}</span>
                                </div>
                            )
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Content Section -->
        <div class='p-6'>
            <!-- Title -->
            <h3
                class='font-bold text-xl text-gray-900 dark:text-white mb-3 line-clamp-2 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors duration-300 leading-tight'
            >
                {event.name}
            </h3>

            <!-- Description -->
            <p class='text-gray-600 dark:text-gray-300 text-sm leading-relaxed mb-4 line-clamp-3'>
                {
                    event.summary ||
                        event.description ||
                        `Únete a este increíble evento en ${event.destination?.name || 'una ubicación especial'}. Una experiencia que no te puedes perder.`
                }
            </p>

            <!-- Event Details Grid -->
            <div class='grid grid-cols-2 gap-4 mb-4'>
                <!-- Attendees -->
                {
                    (event.attendeesCount || event.capacity) && (
                        <div class='flex items-center text-gray-600 dark:text-gray-400 text-sm'>
                            <svg class='w-4 h-4 mr-2' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                                <path
                                    stroke-linecap='round'
                                    stroke-linejoin='round'
                                    stroke-width='2'
                                    d='M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z'
                                />
                            </svg>
                            <span>
                                {event.attendeesCount || 0}
                                {event.capacity && ` / ${event.capacity}`}
                            </span>
                        </div>
                    )
                }

                <!-- Price -->
                {
                    event.price && (
                        <div class='flex items-center text-gray-600 dark:text-gray-400 text-sm'>
                            <svg class='w-4 h-4 mr-2' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                                <path
                                    stroke-linecap='round'
                                    stroke-linejoin='round'
                                    stroke-width='2'
                                    d='M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1'
                                />
                            </svg>
                            <span class='font-medium'>
                                {event.price === 0 || event.price === '0' ? 'Gratis' : `$${event.price}`}
                            </span>
                        </div>
                    )
                }
            </div>

            <!-- Action Button -->
            <div class='flex items-center justify-between pt-4 border-t border-gray-200 dark:border-gray-700'>
                <div
                    class='flex items-center text-primary-600 dark:text-primary-400 font-semibold text-sm group-hover:text-primary-700 dark:group-hover:text-primary-300 transition-colors'
                >
                    Ver detalles
                    <svg
                        class='w-4 h-4 ml-2 transform group-hover:translate-x-1 transition-transform duration-300'
                        fill='none'
                        stroke='currentColor'
                        viewBox='0 0 24 24'
                    >
                        <path
                            stroke-linecap='round'
                            stroke-linejoin='round'
                            stroke-width='2'
                            d='M17 8l4 4m0 0l-4 4m4-4H3'></path>
                    </svg>
                </div>

                <!-- Event Type Icon -->
                <div class='flex items-center text-gray-500 dark:text-gray-400'>
                    <div class='w-8 h-8 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center'>
                        <svg class='w-4 h-4' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                            <path
                                stroke-linecap='round'
                                stroke-linejoin='round'
                                stroke-width='2'
                                d='M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z'
                            ></path>
                        </svg>
                    </div>
                </div>
            </div>
        </div>
    </a>
</article>
