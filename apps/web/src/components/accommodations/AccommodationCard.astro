---
import CarIcon from '@/components/icons/CarIcon.astro';
import CoffeeIcon from '@/components/icons/CoffeeIcon.astro';
import MapPinIcon from '@/components/icons/MapPinIcon.astro';
import StarIcon from '@/components/icons/StarIcon.astro';
import WavesIcon from '@/components/icons/WavesIcon.astro';
import WifiIcon from '@/components/icons/WifiIcon.astro';
import { FavoriteButton } from '@/components/shared/FavoriteButton.client';
import { TranslationKeys } from '@/i18n/translation-keys';
import { formatPrice, getAccommodationUrl, getLangFromUrl, useTranslations } from '@/utils';
import { AccommodationType } from '@repo/types';

interface Props {
    accommodation: AccommodationType;
}

const { accommodation } = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const url = getAccommodationUrl(accommodation);

// Stars are rendered inline in the template to avoid JSX inside frontmatter

const featureIcons: Record<string, any> = {
    wifi: WifiIcon,
    estacionamiento: CarIcon,
    desayuno: CoffeeIcon,
    piscina: WavesIcon,
};
---

<div
    class='bg-white dark:bg-gray-800 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden group cursor-pointer border border-gray-100 dark:border-gray-700'
>
    <a
        href={url}
        class='block focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-500 focus-visible:ring-offset-2 rounded-2xl'
        aria-label={`View accommodation: ${accommodation.name}`}
    >
        <!-- Image Section -->
        <div class='relative h-48 overflow-hidden'>
            <img
                src={accommodation.media?.featuredImage?.url || '/placeholder.svg'}
                alt={accommodation.name}
                class='w-full h-full object-cover group-hover:scale-110 transition-transform duration-700 ease-out'
            />

            <!-- Favorite Button -->
            <div class='absolute top-3 right-3 z-10'>
                <FavoriteButton
                    client:only
                    entityId={accommodation.id}
                    entityType='ACCOMMODATION'
                    initialBookmarked={false}
                    size={20}
                />
            </div>

            <!-- Price Badge -->
            {
                accommodation.price?.price && (
                    <div class='absolute top-3 left-3'>
                        <div class='bg-white/95 dark:bg-gray-900/95 backdrop-blur-sm text-gray-900 dark:text-white px-3 py-1.5 rounded-full text-sm font-semibold shadow-lg'>
                            {formatPrice({
                                price: accommodation.price?.price ?? 0,
                                currency: accommodation.price?.currency,
                            })}
                            <span class='text-xs text-gray-600 dark:text-gray-400 ml-1'>/ noche</span>
                        </div>
                    </div>
                )
            }

            <!-- Type Badge -->
            <div class='absolute bottom-3 left-3'>
                <div class='bg-primary-500/90 backdrop-blur-sm text-white px-3 py-1 rounded-full text-xs font-medium'>
                    {t(`accommodations.types.${accommodation.type.toLowerCase()}` as TranslationKeys)}
                </div>
            </div>
        </div>

        <!-- Content Section -->
        <div class='p-5'>
            <!-- Title and Location -->
            <div class='mb-3'>
                <h3
                    class='font-bold text-lg text-gray-900 dark:text-white mb-1 line-clamp-1 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors'
                >
                    {accommodation.name}
                </h3>
                <div class='flex items-center text-gray-600 dark:text-gray-400 text-sm'>
                    <MapPinIcon class='w-4 h-4 mr-1.5 flex-shrink-0' />
                    <span class='truncate'>{accommodation.destination?.name}</span>
                </div>
            </div>

            <!-- Description -->
            <p class='text-gray-600 dark:text-gray-300 text-sm leading-relaxed mb-4 line-clamp-2'>
                {accommodation.summary || 'Descubre este increíble alojamiento en una ubicación privilegiada.'}
            </p>

            <!-- Rating -->
            <div class='flex items-center mb-4'>
                <div class='flex items-center'>
                    {
                        Array.from({ length: 5 }).map((_, i) => (
                            <StarIcon
                                class={`w-4 h-4 ${i < (accommodation.averageRating ?? 0) ? 'fill-yellow-400 text-yellow-400' : 'text-gray-300 dark:text-gray-600'}`}
                            />
                        ))
                    }
                </div>
                <span class='text-sm text-gray-600 dark:text-gray-400 ml-2'>
                    {accommodation.averageRating ? accommodation.averageRating.toFixed(1) : '0.0'}
                </span>
                <span class='text-xs text-gray-500 dark:text-gray-500 ml-1'>
                    ({accommodation.reviewsCount ?? accommodation.reviews?.length ?? 0} reseñas)
                </span>
            </div>

            <!-- Features -->
            <div class='flex flex-wrap gap-2'>
                {
                    accommodation.features?.slice(0, 4).map((feature) => {
                        const key =
                            feature.hostReWriteName?.toLowerCase() ?? feature.feature?.name?.toLowerCase() ?? '';
                        const IconComponent = key ? featureIcons[key] : undefined;
                        const label = feature;
                        return (
                            <div class='flex items-center gap-1.5 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-3 py-1.5 rounded-full text-xs font-medium hover:bg-primary-100 dark:hover:bg-primary-900/30 hover:text-primary-700 dark:hover:text-primary-300 transition-colors'>
                                {IconComponent && <IconComponent class='w-3.5 h-3.5' />}
                                <span class='capitalize'>{label}</span>
                            </div>
                        );
                    })
                }
                {
                    accommodation.features?.length && accommodation.features?.length > 4 && (
                        <div class='bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 px-3 py-1.5 rounded-full text-xs font-medium'>
                            +{accommodation.features?.length - 4} más
                        </div>
                    )
                }
            </div>

            <!-- Price for mobile (if not shown in badge) -->
            {
                !accommodation.price?.price && (
                    <div class='mt-4 pt-4 border-t border-gray-200 dark:border-gray-700'>
                        <span class='text-primary-600 dark:text-primary-400 font-semibold'>Consultar precio</span>
                    </div>
                )
            }
        </div>
    </a>
</div>
