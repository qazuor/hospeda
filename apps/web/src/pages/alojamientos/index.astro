---
export const prerender = false;

import AccommodationCard from '@/components/AccommodationCard.astro';
import AccommodationFilters from '@/components/AccommodationFilters.astro';
import EmptyState from '@/components/EmptyState.astro';
import Error from '@/components/Error.astro';
import { getAllAccommodations } from '@/data/accommodations';
import Layout from '@/layouts/Layout.astro';
import { AccommodationType } from '@repo/types';

let accommodations: AccommodationType[] = [];
let error = false;

try {
    accommodations = await getAllAccommodations();
} catch (e) {
    console.error('Error fetching accommodations:', e);
    error = true;
}
---

<Layout title='Alojamientos disponibles'>
    <div class='bg-gray-50 dark:bg-gray-900 min-h-screen py-12'>
        <div class='container mx-auto px-4'>
            <div class='mb-10'>
                <h1 class='font-display mb-4 text-4xl'>Alojamientos disponibles</h1>
                <div class='flex items-center justify-between'>
                    <p class='text-gray-600 dark:text-gray-400'>
                        {error ? 'Error al cargar alojamientos' : `Encontramos ${accommodations.length} alojamientos`}
                    </p>
                    <div class='flex items-center space-x-4'>
                        <button
                            type='button'
                            class='flex items-center space-x-2 text-gray-600 dark:text-gray-400 hover:text-primary-500 dark:hover:text-primary-400'
                        >
                            <svg
                                xmlns='http://www.w3.org/2000/svg'
                                class='h-5 w-5'
                                viewBox='0 0 20 20'
                                fill='currentColor'
                            >
                                <title>Filter icon</title>
                                <path
                                    fill-rule='evenodd'
                                    d='M3 3a1 1 0 011-1h12a1 1 0 011 1v3a1 1 0 01-.293.707L12 11.414V15a1 1 0 01-.293.707l-2 2A1 1 0 018 17v-5.586L3.293 6.707A1 1 0 013 6V3z'
                                    clip-rule='evenodd'></path>
                            </svg>
                            <span>Filtros</span>
                        </button>
                        <button
                            type='button'
                            class='flex items-center space-x-2 text-gray-600 dark:text-gray-400 hover:text-primary-500 dark:hover:text-primary-400'
                        >
                            <svg
                                xmlns='http://www.w3.org/2000/svg'
                                class='h-5 w-5'
                                viewBox='0 0 20 20'
                                fill='currentColor'
                            >
                                <title>Sort icon</title>
                                <path
                                    d='M5 4a1 1 0 00-2 0v7.268a2 2 0 000 3.464V16a1 1 0 102 0v-1.268a2 2 0 000-3.464V4zM11 4a1 1 0 10-2 0v1.268a2 2 0 000 3.464V16a1 1 0 102 0V8.732a2 2 0 000-3.464V4zM16 3a1 1 0 011 1v7.268a2 2 0 010 3.464V16a1 1 0 11-2 0v-1.268a2 2 0 010-3.464V4a1 1 0 011-1z'
                                ></path>
                            </svg>
                            <span>Ordenar</span>
                        </button>
                    </div>
                </div>
            </div>

            {
                error && (
                    <Error
                        title='Error al cargar los alojamientos'
                        message='No pudimos cargar la lista de alojamientos. Por favor, intenta nuevamente más tarde.'
                    />
                )
            }

            {
                !error && (
                    <div class='gap-6 lg:gap-8 grid grid-cols-1 lg:grid-cols-12'>
                        <aside class='lg:col-span-3'>
                            <div class='sticky top-24'>
                                <AccommodationFilters />
                            </div>
                        </aside>

                        <main class='gap-6 lg:gap-8 grid grid-cols-1 lg:col-span-9 md:grid-cols-2'>
                            {accommodations.length > 0 ? (
                                accommodations.map((accommodation) => (
                                    <AccommodationCard accommodation={accommodation} />
                                ))
                            ) : (
                                <div class='lg:col-span-2'>
                                    <EmptyState
                                        type='accommodations'
                                        title='No se encontraron alojamientos'
                                        message='No hay alojamientos disponibles en este momento. Intenta modificar los filtros o regresa más tarde.'
                                    />
                                </div>
                            )}
                        </main>
                    </div>
                )
            }
        </div>
    </div>
</Layout>
