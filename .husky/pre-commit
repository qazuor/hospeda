#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Get staged files that match our patterns (exclude deleted files)
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.(js|jsx|ts|tsx|css|scss|md|astro)$' || true)
STAGED_MD_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep '\.md$' || true)
STAGED_CLAUDE_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep '^\.claude/' || true)

# 1. Format markdown files if any are staged
if [ -n "$STAGED_MD_FILES" ]; then
  echo "üìù Formatting markdown files..."
  if echo "$STAGED_MD_FILES" | grep -q '^\.claude/'; then
    pnpm format:md:claude || echo "‚ö†Ô∏è  Markdown formatting failed - continuing"
  else
    pnpm format:md || echo "‚ö†Ô∏è  Markdown formatting failed - continuing"
  fi

  # Re-add formatted markdown files
  for file in $STAGED_MD_FILES; do
    if [ -f "$file" ]; then
      git add "$file"
    fi
  done
fi

# 2. Validate .claude documentation changes
if [ -n "$STAGED_CLAUDE_FILES" ]; then
  echo "üîç Validating .claude documentation..."

  # Check for broken links in staged files
  for file in $STAGED_CLAUDE_FILES; do
    if [ -f "$file" ] && [ "${file##*.}" = "md" ]; then
      # Simple link validation - check if referenced files exist
      grep -oP '\]\(\K[^)]+' "$file" 2>/dev/null | while read -r link; do
        # Skip URLs and anchors
        if ! echo "$link" | grep -qE '^(https?:|#)'; then
          # Convert relative path to absolute
          link_dir=$(dirname "$file")
          link_path="$link_dir/$link"
          if [ ! -f "$link_path" ] && [ ! -d "$link_path" ]; then
            echo "‚ö†Ô∏è  Warning: Broken link in $file: $link"
          fi
        fi
      done
    fi
  done
fi

# 3. Run Biome on staged files
if [ -n "$STAGED_FILES" ]; then
  echo "üîç Running Biome on staged files..."
  echo "$STAGED_FILES" | xargs pnpm dlx biome check --write --no-errors-on-unmatched --files-ignore-unknown=true || echo "‚ö†Ô∏è  Biome check failed - continuing"

  # Re-add files that were modified by Biome (only existing files)
  for file in $STAGED_FILES; do
    if [ -f "$file" ]; then
      git add "$file"
    fi
  done
else
  echo "No staged files to check with Biome."
fi

# 4. Sync TODO comments with Linear
echo "üìù Syncing TODO comments with Linear..."

# Capture currently staged files before sync (exclude deleted files)
STAGED_FILES_BEFORE=$(git diff --cached --name-only --diff-filter=ACMR)

if pnpm todo:sync --quiet 2>/dev/null; then
  echo "‚úÖ TODO sync completed successfully"
  # Re-add only the files that were originally staged and still exist
  if [ -n "$STAGED_FILES_BEFORE" ]; then
    for file in $STAGED_FILES_BEFORE; do
      if [ -f "$file" ]; then
        git add "$file"
      fi
    done
  fi
else
  echo "‚ö†Ô∏è  TODO sync failed or not configured - continuing with commit"
fi

echo "‚úÖ Pre-commit checks complete"
